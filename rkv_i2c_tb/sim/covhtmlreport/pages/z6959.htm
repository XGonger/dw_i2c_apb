<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <!-- original name: _0 Testplan_5 interrupt_5.1 interrupt registersContentFrame7.htm -->
  <link rel="StyleSheet" media="print"  href="../css/ucdb2htmlP.css"/>
  <link rel="StyleSheet" media="screen" href="../css/ucdb2html.css"/>
  <link rel="StyleSheet" media="screen" href="../css/ucdb2html_newlook.css"/>
    <script type="text/javascript" src="../scripts/jquery.js"></script>
    <script type="text/javascript" src="../scripts/sort_tables.js"></script>
  
</head>
<body id="ucdb2html_summary">
  <h1><span class="strip">Questa</span> Testplan Tracking</h1>
  <h3>Section: 5.1 interrupt registers</h3><p>whether interrupt status register would reflect the state and interrupt status mask register would work and interrupt clear register would work</p>
  <hr/><h3>Coverage Summary by Testplan Section:</h3>
  <table>
  <tr><th colspan="2">Scope</th><th>Coverage</th><th>% of Goal</th><th>Bins</th><th>Hits</th><th>% Hit</th><th>Description</th><th>Link Status</th><th>Testpoint</th><th>Weight</th><th>Goal</th></tr>
  <tr><td colspan="2" class="even">5.1 interrupt registers</td><td class="bgYellow" align="center">83.33%</td><td class="bgYellow">83.33%</td><td class="even" align="center">12</td><td class="even" align="center">10</td><td class="even" align="center">83.33%</td><td class="even"><textarea readonly="readonly" class="oddTxtBox" cols="20" rows="2">whether interrupt status register would reflect the state and interrupt status mask register would work and interrupt clear register would work</textarea></td><td class="even">Partial</td><td class="odd"></td><td class="even">1</td><td class="odd">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="odd">5.1.1 general call</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">--</td><td class="oddGrey"><textarea readonly="readonly" class="exclOddTxtBox" cols="20" rows="2">whether interrupt is active when a general call address is acknowledged</textarea></td><td class="oddGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">set IC_INTR_MASK.M_GEN_CALL, check IC_RAW_INTR_STAT.GEN_CALL and IC_INTR_STAT.GEN_CALL, then read IC_CLR_GEN_CALL and check above two registers again</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="even">5.1.2 start detected</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">--</td><td class="evenGrey"><textarea readonly="readonly" class="exclEvenTxtBox" cols="20" rows="2">whether interrupt is active when a start or restart condition has occurred</textarea></td><td class="evenGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">set IC_INTR_MASK.M_START_DEF, check IC_RAW_INTR_STAT.START_DEF and IC_INTR_STAT.START_DEF, then read IC_CLR_START_DEF and check above two registers again</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="odd">5.1.3 stop detected</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">--</td><td class="oddGrey"><textarea readonly="readonly" class="exclOddTxtBox" cols="20" rows="2">whether interrupt is active when a stop condition has occurred</textarea></td><td class="oddGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.STOP_DET</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="even">5.1.4 DW_apb_i2c activity</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">--</td><td class="evenGrey"><textarea readonly="readonly" class="exclEvenTxtBox" cols="20" rows="2">whether interrupt is active when the DW_apb_i2c is active</textarea></td><td class="evenGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.ACTIVITY</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="odd">5.1.5 slave transmition done</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">--</td><td class="oddGrey"><textarea readonly="readonly" class="exclOddTxtBox" cols="20" rows="2">whether interrupt is active when the DW_apb_i2c is acting as a slave-transmitter and the master does not acknowledge a transmitted byte</textarea></td><td class="oddGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.RX_DONE</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="even">5.1.6 transmit abort</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">--</td><td class="evenGrey"><textarea readonly="readonly" class="exclEvenTxtBox" cols="20" rows="2">whether interrupt is active when the DW_apb_i2c is unable to complete the intended actions on the contents of the transmit FIFO</textarea></td><td class="evenGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.TX_ABRT</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="odd">5.1.7 read requirement</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">--</td><td class="oddGrey"><textarea readonly="readonly" class="exclOddTxtBox" cols="20" rows="2">whether interrupt is active when the DW_apb_i2c (slave-transmitter) receives a read requst but there is no data in the IC_DATA_CMD register</textarea></td><td class="oddGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.RD_REQ</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="even">5.1.8 TX FIFO empty interrupt</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">--</td><td class="evenGrey"><textarea readonly="readonly" class="exclEvenTxtBox" cols="20" rows="2">whether interrupt is active when the transmit buffer is at or below the threshold value set in the IC_TX_TL register</textarea></td><td class="evenGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.TX_EMPTY</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="odd">5.1.9 TX FIFO overflow interrupt</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">--</td><td class="oddGrey"><textarea readonly="readonly" class="exclOddTxtBox" cols="20" rows="2">whether interrupt is active when the transmit buffer is filled to IC_TX_BUFFER_DEPTH and the processor attempts to issue another I2C command by writing to the IC_DATA_CMD register</textarea></td><td class="oddGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.TX_OVER</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="even">5.1.10 RX FIFO full interrupt</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">--</td><td class="evenGrey"><textarea readonly="readonly" class="exclEvenTxtBox" cols="20" rows="2">whether interrupt is active when the receive buffer reaches or goes above the RX_TL threshold in the IC_RX_TL register</textarea></td><td class="evenGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.RX_FULL</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="odd">5.1.11 RX FIFO overflow interrupt</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0.00%</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">0</td><td class="oddGrey" align="center">--</td><td class="oddGrey"><textarea readonly="readonly" class="exclOddTxtBox" cols="20" rows="2">whether interrupt is active when the receive buffer is completely filled to IC_RX_BUFFER_DEPTH and an additional byte is received from an external I2C device</textarea></td><td class="oddGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.RX_OVER</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
<tr><td class="invisible">&nbsp;</td><td colspan="1" class="even">5.1.12 RX FIFO under interrupt</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0.00%</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">0</td><td class="evenGrey" align="center">--</td><td class="evenGrey"><textarea readonly="readonly" class="exclEvenTxtBox" cols="20" rows="2">whether interrupt is active when the processor attempts to read the receive buffer when it is empty by reading from the IC_DATA_CMD register</textarea></td><td class="evenGrey">Unlinked</td><td class="oddGrey"><textarea readonly="readonly" class="oddGreyTxtBox" cols="20" rows="2">IC_RAW_INTR_STAT.RX_UNDER</textarea></td><td class="evenGrey">0</td><td class="oddGrey">100%</td></tr>
</table>
  <hr/><h3>Coverage By Linked Coverage Item:</h3>
  <table cellspacing="2" cellpadding="2">
  <tr><th align="left">Item Type</th><th align="left">Instance</th><th align="left">Source</th><th>Coverage</th><th>Bins</th><th>Hits</th><th>% Hit</th></tr>
  <tr><td class="odd">Covergroup</td><td class="odd">/rkv_i2c_pkg/rkv_i2c_cgm/interrupt_status_cg</td><td class="odd">../cov/rkv_i2c_cgm.sv:228</td><td class="bgYellow">83.33%</td><td class="odd">12</td><td class="odd">10</td><td class="odd">83.33%</td></tr>
  </table>
  <hr/><table id="loc_rec_tables" cellspacing="5"><tr></tr></table>
  <hr/><h3>Testsplan scope attributes:</h3>
  <table>
  <tr><th colspan="2">User-defined Attributes</th></tr>
  <tr><th align="left">Attribute</th><th align="left">Value</th></tr>
  <tr><td class="odd">Goal</td><td class="odd">100%</td></tr>
<tr><td class="even">Testpoint</td><td class="even"></td></tr>
<tr><td class="odd">Weight</td><td class="odd">1</td></tr>
<tr><th colspan="2">Internal Attributes</th></tr>
  <tr><th align="left">Attribute</th><th align="left">Value</th></tr>
  <tr><td class="odd">TAGCMD</td><td class="odd"> -tagname "Testplan.5.1" -cvgmatch "interrupt_status_cg";</td></tr>
</table>
  
  
  
</body>
</html>
